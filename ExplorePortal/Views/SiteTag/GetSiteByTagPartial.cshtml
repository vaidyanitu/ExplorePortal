@model PagedList.IPagedList<ExploreModel.Site>
@using PagedList.Mvc;

<div id="Tarea">
    @{ var odd = true; }
    @foreach (var item in Model)
    {

        <div class="@(odd ? "blog-left":"blog-right")" id="displaypanel">
            @{ byte[] photo = item.Photo;
             string imageSrc = null;
             if (photo != null)
             {
                 var imageBase64 = Convert.ToBase64String(item.Photo.ToArray());
                 imageSrc = string.Format("data:image/jpeg;base64,{0}", imageBase64);
             }
            }
            <div class="blog-img">
                <a href="single.html">
                    <img src="@imageSrc" alt="" />
                    <div class="blog-desc">
                        <h5>@Html.DisplayFor(modelItem => item.SiteName)</h5>
                        <h5>@Html.DisplayFor(modelItem => item.SiteLocation)</h5>
                        @*<p>@Html.DisplayFor(modelItem => item.SiteDescription)</p>*@
                        <div class="comment">
                            @Html.ActionLink("Edit", "EditSite", new { Controller = "Sites", id = item.SiteId }) |
                            @Html.ActionLink("Details", "DetailsSite", new { Controller = "Sites", id = item.SiteId }) |
                            @Html.ActionLink("Delete", "DeleteSite", new { Controller = "Sites", id = item.SiteId })
                        </div>
                    </div>
                </a>
            </div>
        </div>
             odd = !odd;

    }
    <div class="clear"></div>
    <div class="dc_pagination dc_paginationA dc_paginationA06" id="myPager">
        <!--Code to show current page and page number-->
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(
                        Model,
                            page => Url.Action("GetSiteByTag", new
                            {
                                page,
                                sortOrder = ViewBag.CurrentSort,
                                currentFilter = ViewBag.CurrentFilter,
                                tagname = ViewBag.TagName
                            }),
                        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
                        {
                            
                        })
                    )
    </div>    
</div>


<script>
  
    $(function () {
        //to avoid returning this pages view while clicking page button
        $('#myPager').on('click', 'a', function () {
            $.ajax({
                url: this.href,
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#Tarea').html(result);
                }
            });
            return false;
        });
    });
</script>

